@model IEnumerable<Assignment1.Models.Recipe>

@{
    ViewData["Title"] = "All Recipes";
}

@using (Html.BeginForm("AllRecipes", "Recipe", FormMethod.Get))
{
    @Html.TextBox("query") <input type="submit" value="Search" />
}
<table>
    <thead>
        <tr class="alternate">
            <td><h3>Title</h3></td>
            <td><h3>Preparation time</h3></td>
            <td><h3>Cook time</h3></td>
        </tr>
    </thead>
    @functions {
        public bool query(Assignment1.Models.Recipe recipe)
        {
            /*
             * Query the recipe to see if it contains the user's search words 
             */
            List<String> properties = new List<string> { recipe.Instructions, recipe.RecipeID.ToString(), recipe.Title, recipe.TotalTime.ToString() };
            string query = Context.Request.Query["query"].ToString().ToLower();
            foreach (String property in properties)
            {
                if (property.ToLower().Contains(query))
                {
                    return true;
                }
            }
            return false;
        }
    }
    @{ int counter = 1; }
    @foreach (Assignment1.Models.Recipe recipe in Model)
    {
        @if (query(recipe))
        {
            <tbody>
                <tr class="@((counter % 2 == 1) ? "alternate" : "")">
                    @*sets the class as alternate for the odd rows according to the RecipeID*@
                    <td width="60%">
                        <a asp-controller="Recipe" asp-action="DisplayPage" asp-route-recipeID="@recipe.RecipeID">@recipe.Title</a>@*passes the RecipeID of the clicked recipe through the URL*@
                    </td>
                    <td class="allRecipesTD" width="24%">@recipe.TotalTime</td>
                    <td class="allRecipesTD" width="16%">@recipe.CookTime</td>
                </tr>
            </tbody>
            counter++;
        }
    }
</table>